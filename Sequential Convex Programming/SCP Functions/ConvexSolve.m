
function [NewReference] = ConvexSolve(SCP,Reference,ConvexProblemOptimizer,DiscreteCost,DiscreteDynamics,DiscreteConstraints,Fields,dims)

% Construct Inputs
inputs = {DiscreteCost.Aphi,...
          DiscreteCost.Bphi,...
          DiscreteCost.Cphi,...
          DiscreteCost.Dphi,...
          DiscreteCost.rphi,...
          DiscreteCost.AL,...
          DiscreteCost.BL,...
          DiscreteCost.CL,...
          DiscreteCost.DL,...
          DiscreteCost.rL,...
          DiscreteDynamics.A,...
          DiscreteDynamics.Bm,...
          DiscreteDynamics.Bp,...
          DiscreteDynamics.C,...
          DiscreteDynamics.D,...
          DiscreteDynamics.E,...
          DiscreteDynamics.r,...
          DiscreteDynamics.G,...
          DiscreteConstraints.H0,...
          DiscreteConstraints.I0,...
          DiscreteConstraints.J0,...
          DiscreteConstraints.K0,...
          DiscreteConstraints.l0,...
          DiscreteConstraints.Hf,...
          DiscreteConstraints.If,...
          DiscreteConstraints.Jf,...
          DiscreteConstraints.Kf,...
          DiscreteConstraints.lf,...
          DiscreteConstraints.As,...
          DiscreteConstraints.Bs,...
          DiscreteConstraints.Cs,...
          DiscreteConstraints.Ds,...
          DiscreteConstraints.rs,...
          Reference.x,...
          Reference.u,...
          Reference.p,...
          Reference.h,...
          Reference.c,...
          SCP.eta};
inputs = inputs(~cellfun('isempty',inputs)); % Remove empty cells

% Solve Convex Subproblem
[solution,infeasible] = ConvexProblemOptimizer{inputs};

% Check Infeasibility:
if infeasible
    error('Convex Subproblem was infeasible!');
end

% Construct New Reference:
i = 1;
NewReference.L = solution{i}; i = i + 1;
NewReference.x = solution{i}; i = i + 1; 
%NewReference.x(7:10,:) = NewReference.x(7:10,:)./vecnorm(NewReference.x(7:10,:));
NewReference.u = solution{i}; i = i + 1;
if dims.np ~= 0 NewReference.p = solution{i}; i = i+1; else NewReference.p = zeros(0,1); end
if dims.nh ~= 0 NewReference.h = solution{i}; i = i+1; else NewReference.h = zeros(0,dims.N); end
if dims.nc ~= 0 NewReference.c = solution{i}; i = i+1; else NewReference.c = zeros(0,1); end
for k = i:length(Fields)
    NewReference.ConvexVars.(Fields{k}) = solution{k+i-1};
end

end